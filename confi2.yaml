# BMW Manufacturing Error Classification Configuration - OPTIMIZED FOR HIGH PERFORMANCE
# 10 Total Perspectives: 2 Industry Standard + 4 Expert Defined + 4 GPT Data Analysis
# Hardware: 12 CPUs, 128GB RAM - Optimized for speed and throughput

input_file: "input/Maintenance_Classified.dta"
output_file: "output/BMW_Manufacturing_Errors_ALL_Classifications.dta"
results_dir: "output/bmw_complete_classification_results"

# All 6 BMW manufacturing text columns (4 English + 2 German)
text_columns:
  - CauseDescription_EN
  - CauseLongText_EN  
  - TechnicalObjectDescription_EN
  - DamagePatternLongText_EN
  - ShortDescription      # German
  - Description           # German

# Testing configuration for faster runs
testing:
  enabled: true
  sample_size: 3000  # Increased for high-performance system
  sample_method: "random"
  output_file: "output/BMW_test_ALL_classifications.dta"

# Minimal preprocessing to preserve technical terminology
preprocessing:
  lowercase: false
  remove_punctuation: false
  remove_stopwords: false
  lemmatize: false
  min_word_length: 1
  max_length: 2000

# =============================================================================
# 10 TOTAL PERSPECTIVES: All Classification Approaches
# =============================================================================
clustering_perspectives:

  # =============================================================================
  # INDUSTRY STANDARD CLASSIFICATIONS (2 perspectives)
  # =============================================================================

  # Industry Standard: Severity-Based Classification
#  bmw_errors_severity:
#    type: "openai_classification"
#    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
#    target_categories:
#      - "Critical Defects"
#      - "Major Defects"
#      - "Minor Defects"
#      - "Other"
#      - "Unknown"
#    output_column: "bmw_error_severity"
#    
#    llm_config:
#      provider: "openai"
#      model: "gpt-3.5-turbo-0125"  # Faster model for high throughput
#      temperature: 0.0
#      max_tokens: 15  # Reduced for speed
#      api_key_env: "OPENAI_API_KEY"
#    
#    classification_config:
#      batch_size: 100  # Increased batch size for high-performance system
#      unknown_category: "Unknown"
#      prompt_template: |
#        Classify this BMW manufacturing error by severity level following automotive industry standards.#
#
#        SEVERITY LEVELS:
#        - "Critical Defects": Safety hazards, unusable products, potential recalls
#        - "Major Defects": Significant spec deviations, affect function/performance
#        - "Minor Defects": Minor spec non-compliance, minimal impact
#        - "Other": Clear errors not fitting severity categories
#        - "Unknown": Insufficient information
#
#        ERROR: {text}
#
#        Category name only:
#
#  # Industry Standard: Origin-Based Classification  
#  bmw_errors_origin:
#    type: "openai_classification"
#    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
#    target_categories:
#      - "Manufacturing Defects"
#      - "Design Flaws"
#      - "Mislabeling"
#      - "Other"
#      - "Unknown"
#    output_column: "bmw_error_origin"
#    
#    llm_config:
#      provider: "openai"
#      model: "gpt-3.5-turbo-0125"
#      temperature: 0.0
#      max_tokens: 15
#      api_key_env: "OPENAI_API_KEY"
#    
#    classification_config:
#      batch_size: 100
#      unknown_category: "Unknown"
#      prompt_template: |
#        Classify this BMW error by origin following automotive standards.
#
#        ORIGINS:
#        - "Manufacturing Defects": Production process errors, assembly issues
#        - "Design Flaws": Engineering design problems, specification issues
#        - "Mislabeling": Documentation errors, incorrect labeling
#        - "Other": Clear origin not fitting above
#        - "Unknown": Insufficient data
#
#        ERROR: {text}
#
#        Category name only:

  # =============================================================================
  # EXPERT DEFINED CLASSIFICATIONS (4 perspectives)
  # =============================================================================

  # Expert Definition: 2-Category High-Level
  bmw_errors_expert_2groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Design Errors"
      - "Process Errors"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_expert_2groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 10
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 100
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error into expert categories:

        CATEGORIES:
        - "Design Errors": Physical component breakdowns, wear, structural failures
        - "Process Errors": Process deviations, procedure errors, operational issues
        - "Other": Clear errors not fitting above
        - "Unknown": Insufficient information

        ERROR: {text}

        Category only:

  # Expert Definition: 7-Category Detailed
  bmw_errors_expert_7groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Design Errors"
      - "Material Errors"
      - "Equipment Failures"
      - "Process Deviations"
      - "Operator Errors"
      - "Inspection Errors"
      - "Environmental Errors"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_expert_7groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 15
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 80
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using expert 7-group categories:

        - "Design Errors": Physical parts breakage, wear, mechanical failures
        - "Material Errors": Electrical systems, wiring, electronic failures
        - "Equipment Failures": Manufacturing parameters outside specs
        - "Process Deviations": Raw material quality issues, spec deviations
        - "Operator Errors": Human mistakes, procedure violations
        - "Inspection Errors": Tools, fixtures, jigs, setup equipment issues
        - "Environmental Errors": Control software, automation, programming problems
        - "Other": Clear errors not fitting expert categories
        - "Unknown": Insufficient data

        ERROR: {text}

        Category only:

  # Expert Definition: 10-Category Comprehensive
  bmw_errors_expert_10groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Dimensional Errors"
      - "Drawing Interpretation Errors"
      - "Surface Defects"
      - "Heat Treatment Errors"
      - "Welding Defects"
      - "Material Specification Errors"
      - "Fastening Defects"
      - "Supplier Nonconformance"
      - "Painting Defects"
      - "Machine Calibration Errors"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_expert_10groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 20
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 60
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using expert 10-group categories:

        - "Dimensional Errors": Size, tolerance, measurement issues
        - "Drawing Interpretation Errors": Blueprint, specification misreading
        - "Surface Defects": Finish, coating, surface quality issues
        - "Heat Treatment Errors": Thermal processing problems
        - "Welding Defects": Weld quality, joint problems
        - "Material Specification Errors": Wrong material, grade issues
        - "Fastening Defects": Bolt, screw, connection problems
        - "Supplier Nonconformance": Vendor quality issues
        - "Painting Defects": Paint quality, application problems
        - "Machine Calibration Errors": Equipment setup, calibration issues
        - "Other": Clear issues not covered
        - "Unknown": Insufficient data

        ERROR: {text}

        Category only:

  # Expert Definition: 20-Category Granular
  bmw_errors_expert_20groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Assembly Defects"
      - "Tool Wear"
      - "Material Defects"
      - "Machine Setup Errors"
      - "Contamination"
      - "Welding Porosity"
      - "Calibration Errors"
      - "Incomplete Weld Penetration"
      - "Documentation Errors"
      - "Weld Cracking"
      - "Bolt Overtightening"
      - "Bolt Undertightening"
      - "Missing Fasteners"
      - "Paint Texture Defects"
      - "Paint Run Defects"
      - "Coating Adhesion Defects"
      - "Surface Roughness Errors"
      - "Stamping Dimensional Errors"
      - "Handling Damage"
      - "Foreign Object Inclusion"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_expert_20groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 25
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 40
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using granular 20-group expert categories:

        Assembly: "Assembly Defects"
        Tools: "Tool Wear"
        Materials: "Material Defects"
        Setup: "Machine Setup Errors"
        Cleanliness: "Contamination"
        Weld Quality: "Welding Porosity", "Incomplete Weld Penetration", "Weld Cracking"
        Calibration: "Calibration Errors"
        Documentation: "Documentation Errors"
        Fasteners: "Bolt Overtightening", "Bolt Undertightening", "Missing Fasteners"
        Paint: "Paint Texture Defects", "Paint Run Defects", "Coating Adhesion Defects"
        Surface: "Surface Roughness Errors"
        Forming: "Stamping Dimensional Errors"
        Handling: "Handling Damage"
        Foreign Objects: "Foreign Object Inclusion"
        Other: "Other"
        Unknown: "Unknown"

        ERROR: {text}

        Category only:

  # =============================================================================
  # GPT DATA ANALYSIS BASED CLASSIFICATIONS (4 perspectives)
  # =============================================================================

  # GPT Data Analysis: 2-Category High-Level Grouping
  bmw_errors_data_2groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Mechanical and Operational Failures"
      - "Process and Quality Control Issues"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_data_2groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 20
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 100
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using data analysis 2-group categories:

        - "Mechanical and Operational Failures": Equipment malfunctions, mechanical breakdowns
        - "Process and Quality Control Issues": Process deviations, quality failures
        - "Other": Errors not fitting above
        - "Unknown": Insufficient information

        ERROR: {text}

        Category only:

  # GPT Data Analysis: 7-Category Detailed Operational Focus
  bmw_errors_data_7groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Equipment Malfunction"
      - "Process Errors"
      - "Quality Assurance Failures"
      - "Material Issues"
      - "Software and Control System Errors"
      - "Maintenance and Inspection Failures"
      - "Human Factors"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_data_7groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 20
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 80
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using data analysis 7-group categories:

        - "Equipment Malfunction": Machine/equipment failures
        - "Process Errors": Manufacturing process deviations
        - "Quality Assurance Failures": QC process failures
        - "Material Issues": Raw material defects, supply problems
        - "Software and Control System Errors": Automation, software issues
        - "Maintenance and Inspection Failures": Preventive maintenance issues
        - "Human Factors": Operator errors, training issues
        - "Other": Doesn't fit above categories
        - "Unknown": Insufficient data

        ERROR: {text}

        Category only:

  # GPT Data Analysis: 10-Category System-Focused Analysis
  bmw_errors_data_10groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Communication Failures"
      - "Mechanical Failures"
      - "Process Errors"
      - "Alignment Issues"
      - "Contamination Problems"
      - "Supply Chain Issues"
      - "Software and IT Failures"
      - "Maintenance Oversights"
      - "Personnel-Related Issues"
      - "Quality Assurance Failures"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_data_10groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 20
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 60
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using data analysis 10-group categories:

        - "Communication Failures": System communication, network issues
        - "Mechanical Failures": Physical component breakdowns
        - "Process Errors": Manufacturing process deviations
        - "Alignment Issues": Component misalignment, positioning
        - "Contamination Problems": Foreign objects, cleanliness
        - "Supply Chain Issues": Material quality, delivery problems
        - "Software and IT Failures": Control software malfunctions
        - "Maintenance Oversights": Preventive maintenance gaps
        - "Personnel-Related Issues": Human factors, staffing
        - "Quality Assurance Failures": QC process breakdowns
        - "Other": Clear errors not fitting above
        - "Unknown": Insufficient information

        ERROR: {text}

        Category only:

  # GPT Data Analysis: 20-Category Granular Failure Mode Analysis
  bmw_errors_data_20groups:
    type: "openai_classification"
    columns: ["CauseDescription_EN", "CauseLongText_EN", "TechnicalObjectDescription_EN", "DamagePatternLongText_EN", "ShortDescription", "Description"]
    target_categories:
      - "Communication Errors"
      - "Mechanical Failures"
      - "Process Errors"
      - "Quality Assurance Failures"
      - "Electrical Issues"
      - "Material Deficiencies"
      - "Alignment Issues"
      - "Cleaning and Maintenance Failures"
      - "Software Malfunctions"
      - "Foreign Object Contamination"
      - "Personnel-Related Issues"
      - "Inspection and Testing Failures"
      - "Operational Delays"
      - "Safety and Compliance Issues"
      - "Environmental Factors"
      - "Tooling and Equipment Issues"
      - "Documentation and Record-Keeping Errors"
      - "Calibration and Adjustment Errors"
      - "Supply Chain Disruptions"
      - "Unclear or Undefined Issues"
      - "Other"
      - "Unknown"
    output_column: "bmw_error_data_20groups"
    
    llm_config:
      provider: "openai"
      model: "gpt-3.5-turbo-0125"
      temperature: 0.0
      max_tokens: 30
      api_key_env: "OPENAI_API_KEY"
    
    classification_config:
      batch_size: 40
      unknown_category: "Unknown"
      prompt_template: |
        Classify BMW error using comprehensive data analysis 20-group categories:

        Communication: "Communication Errors"
        Mechanical: "Mechanical Failures"
        Process: "Process Errors"
        Quality: "Quality Assurance Failures"
        Electrical: "Electrical Issues"
        Materials: "Material Deficiencies"
        Alignment: "Alignment Issues"
        Maintenance: "Cleaning and Maintenance Failures"
        Software: "Software Malfunctions"
        Contamination: "Foreign Object Contamination"
        Personnel: "Personnel-Related Issues"
        Testing: "Inspection and Testing Failures"
        Operations: "Operational Delays"
        Safety: "Safety and Compliance Issues"
        Environment: "Environmental Factors"
        Tooling: "Tooling and Equipment Issues"
        Documentation: "Documentation and Record-Keeping Errors"
        Calibration: "Calibration and Adjustment Errors"
        Supply: "Supply Chain Disruptions"
        Unclear: "Unclear or Undefined Issues"
        Other: "Other"
        Unknown: "Unknown"

        ERROR: {text}

        Category only:

# =============================================================================
# GLOBAL CONFIGURATION (Optimized for 12 CPUs, 128GB RAM)
# =============================================================================

# AI Classification global settings (optimized for high-performance system)
ai_classification:
  cost_management:
    max_cost_per_run: 75.0  # Increased for 10 perspectives with faster processing
  
  caching:
    enabled: true
    cache_directory: "ai_cache_bmw_highperf"
    preload_cache: true
    cache_duration_days: 365
  
  rate_limiting:
    requests_per_minute: 1000  # Increased for faster model
    concurrent_requests: 12    # Match CPU count
  
  parallel_processing:
    max_workers: 12  # Match CPU count

# Feature extraction (not used for AI classification but required)
feature_extraction:
  method: "tfidf"
  tfidf:
    max_features: 1000
    min_df: 1
    max_df: 0.95
    ngram_range: [1, 2]

# Disable traditional clustering features to save resources
cluster_labeling:
  method: "tfidf"

cluster_analysis:
  enabled: false

evaluation:
  metrics: []
  visualizations: []
  output_format:
    - 'json'

# Spark settings optimized for 12 CPUs, 128GB RAM
spark:
  executor_memory: "110g"   # Use ~80% of available RAM
  driver_memory: "20g"      # Reserve 20GB for driver
  executor_cores: 4         # 3 cores per executor (4 executors total)
  default_parallelism: 12   # Match CPU count

# Disable checkpointing to save disk space and improve speed
checkpoint:
  enabled: false

# Logging
logging:
  level: "INFO"
  console_output: true
  log_file: "logs/bmw_highperf_classification.log"

# Options
options:
  seed: 42
  save_intermediate: false
  clean_intermediate_on_success: true

# Performance optimizations
performance:
  batch_size: 200      # Large batches for high-performance system
  parallel_jobs: 12    # Match CPU count
  cache_embeddings: true
  cache_directory: "cache_highperf"